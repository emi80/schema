swagger: "2.0"
info:
  description: "Sequence Annotation API for GA4GH consideration."
  version: "0.1.0"
  title: "GA4GH Sequence Annotation API"
host: "ga4gh.org"
basePath: "/sequenceannotation"
tags:
- name: "annotations"
  description: "High level collection of annotated features"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
- name: "features"
  description: "single annotated sequence"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
- name: "continuous"
  description: "Numerical value for each base in an interval"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
- name: "getVersions"
  description: "Returns database release versions"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
- name: "changelog"
  description: "Returns change log for a release version"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
- name: "files"
  description: "Returns files"
  externalDocs:
    description: "Find out more"
    url: "https://github.com/ga4gh-rnaseq/schema"
schemes:
- "http"
paths:
  /annotations/search:
    get:
      tags:
      - "annotations"
      summary: "Search for annotations matching filters"
      description: "Search for annotations matching filters"
      operationId: "searchAnnotations"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Comma separated tag list to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "version"
        in: "query"
        description: "version to return"
        required: false
        type: "string"
      - name: "reference"
        in: "query"
        description: "return annotations for specified referenceID"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/annotation"
        400:
          description: "Error"
      security:
      - rna_auth:
        - "read:annotation"
  /annotations/{annotationId}:
    get:
      tags:
      - "annotations"
      summary: "Find annotation by ID"
      description: "Returns a single specified annotation"
      operationId: "getAnnotationById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "annotationId"
        in: "path"
        description: "ID of annotation to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/annotation"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Annotation not found"
      security:
      - api_key: []
  /features/search:
    get:
      tags:
      - "features"
      summary: "Search for features matching filters"
      description: "Search for features matching filters"
      operationId: "searchFeatures"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Comma separated tag list to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "version"
        in: "query"
        description: "version to return"
        required: false
        type: "string"
      - name: "gene"
        in: "query"
        description: "gene name of feature to filter by"
        required: false
        type: "string"
      - name: "accession"
        in: "query"
        description: "accession number of feature to filter by"
        required: false
        type: "string"
      - name: "type"
        in: "query"
        description: "feature type to filter by"
        required: false
        type: "string"
      - name: "reference"
        in: "query"
        description: "referenceID to filter by"
        required: false
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/feature"
        400:
          description: "Error"
      security:
      - rna_auth:
        - "read:annotation"
  /features/{featureId}:
    get:
      tags:
      - "features"
      summary: "Find feature by ID"
      description: "Returns a single specified feature"
      operationId: "getFeatureById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "featureId"
        in: "path"
        description: "ID of feature to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/feature"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Feature not found"
      security:
      - api_key: []
  /continuous/{continuousId}:
    get:
      tags:
      - "continuous"
      summary: "Find continuous data by ID"
      description: "Returns a single specified continuous matrix"
      operationId: "getContinuousById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "continuousId"
        in: "path"
        description: "ID of continuous to return"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/continuous"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Continuous not found"
      security:
      - api_key: []
  /continuous/search:
    get:
      tags:
      - "continuous"
      summary: "Search for continuous matching filters"
      description: "Search for continuous matching filters"
      operationId: "searchContinuous"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Comma separated tag list to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "reference"
        in: "query"
        description: "return continuous for specified referenceID"
        required: false
        type: "string"
      - name: "start"
        in: "query"
        description: "starting coordinate of open interval to filter by"
        required: false
        type: "integer"
      - name: "end"
        in: "query"
        description: "ending coordinate of open interval to filter by"
        required: false
        type: "integer"
      - name: "version"
        in: "query"
        description: "version to filter by"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/continuous"
        400:
          description: "Error"
      security:
      - rna_auth:
        - "read:annotation"
  /getVersions:
    get:
      tags:
      - "getVersions"
      summary: "Get release versions of database"
      produces:
      - "application/xml"
      - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "string"
        400:
          description: "Invalid tag value"
      security:
      - rna_auth:
        - "read:annotation"
  /changelog/{version}:
    get:
      tags:
      - "changelog"
      summary: "Get change log for a specific release version"
      description: "Returns changes associated with specified database release version"
      operationId: "getChangeLog"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "version"
        in: "path"
        description: "release version"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/changeLog"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Change log not found"
      security:
      - api_key: []
  /files/{fileID}:
    get:
      tags:
      - "files"
      summary: "Get specific file"
      description: "Returns download URL for file"
      operationId: "getFile"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "fileID"
        in: "path"
        description: "file ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/file"
        400:
          description: "Invalid ID supplied"
        404:
          description: "File not found"
      security:
      - api_key: []
  /files/search:
    get:
      tags:
      - "files"
      summary: "Search for files matching filters"
      description: "Search for files matching filters.  Returns download URL or manifest of download URLs for matching file(s)"
      operationId: "searchFiles"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "Comma separated tag list to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "annotationID"
        in: "query"
        description: "AnnotationID to filter by"
        required: false
        type: "string"
      - name: "featureID"
        in: "query"
        description: "FeatureID to filter by"
        required: false
        type: "string"
      - name: "fileType"
        in: "query"
        description: "File type to filter by"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/file"
        400:
          description: "Error"
      security:
      - rna_auth:
        - "read:annotation"
securityDefinitions:
  rna_auth:
    type: "oauth2"
    authorizationUrl: "http://ga4gh.org/oauth/dialog"
    flow: "implicit"
    scopes:
      read:annotation: "read annotation"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  annotation:
    description: "top level genomic annotation object corresponding to a single GFF file"
    type: "object"
    properties:
      id:
        type: "string"
      version:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
      description:
        type: "string"
      referenceID:
        type: "string"
    externalDocs:
      description: "Find out more"
      url: "https://github.com/ga4gh-rnaseq/schema"
    xml:
      name: "annotation"
  continuous:
    type: "object"
    description: "List of continuous values along an interval"
    properties:
      id:
        type: "string"
      version:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      continuousValues:
        type: "array"
        items:
          type: "number"
          format: "float"
      start:
        type: "number"
        format: "float"
    externalDocs:
      description: "Find out more"
      url: "https://github.com/ga4gh-rnaseq/schema"
    xml:
      name: "continuous"
  feature:
    type: "object"
    description: "equivalent to a line of a GFF file"
    properties:
      id:
        type: "string"
      version:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      accession:
        type: "string"
      name:
        type: "string"
      seqName:
        type: "string"
      start:
        type: "integer"
      end:
        type: "integer"
      strand:
        type: "string"
      featureType:
        type: "string"
    externalDocs:
      description: "Find out more"
      url: "https://github.com/ga4gh-rnaseq/schema"
    xml:
      name: "feature"
  changeLog:
    type: "object"
    description: "list of changes to the database associated with a version update"
    properties:
      version:
        type: "string"
    externalDocs:
      description: "Find out more"
      url: "https://github.com/ga4gh-rnaseq/schema"
    xml:
      name: "changeLog"
  file:
    type: "object"
    description: "URL and type for raw data and analysis pipeline files"
    properties:
      id:
        type: "string"
      version:
        type: "string"
      tags:
        type: "array"
        items:
          type: "string"
      fileType:
        type: "string"
      featureID:
        type: "string"
      URL:
        type: "string"
    externalDocs:
      description: "Find out more"
      url: "https://github.com/ga4gh-rnaseq/schema"
    xml:
      name: "file"
externalDocs:
  description: "Find out more about GA4GH"
  url: "http://ga4gh.org"
